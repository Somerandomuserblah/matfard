<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="r{a-W,JywAPfJ.q-)QKR">mRow1</variable><variable id="sn?*-|+fd{m#%CQ.|AG=">mRow2</variable><variable id="U:0A,IQuP[twk0o=rWwO">mRow3</variable><variable id="=pL4g`T3h*1QJx$27Rl[">mRow4</variable></variables><block type="pxt-on-start" id="8WXHc5.8j*c7$GKs0IES" x="0" y="0"><statement name="HANDLER"><block type="typescript_statement" id=",7lltr=*SsN,H0sUXK]p" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let out1: number[] = []" numlines="1" declaredvars="out1"></mutation><next><block type="typescript_statement" id="8SWkS$@4X;h|2L3MbkG)" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let out2: number[] = []" numlines="1" declaredvars="out2"></mutation><next><block type="typescript_statement" id="U1PL-?+x-pdazQ!:_l%G" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let out3: number[] = []" numlines="1" declaredvars="out3"></mutation><next><block type="typescript_statement" id="G6Y~vKyLQYybHQ?u7],8" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let det = 0" numlines="1" declaredvars="det"></mutation><next><block type="typescript_statement" id="A(.YjZFvjMJY8v]zzLX$" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let aRow4: number[] = []" numlines="1" declaredvars="aRow4"></mutation><next><block type="typescript_statement" id="AUQ8cq+TN`/3D@lIo_t-" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let aRow3: number[] = []" numlines="1" declaredvars="aRow3"></mutation><next><block type="typescript_statement" id="!!ZX7Y|At0lQ{[?Jb;%k" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let aRow2: number[] = []" numlines="1" declaredvars="aRow2"></mutation><next><block type="typescript_statement" id="00[VRc72YDBXC4W*XF%i" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="let aRow1: number[] = []" numlines="1" declaredvars="aRow1"></mutation><next><block type="variables_set" id="Z^BxcJRx.SnBt]Zs6#re"><field name="VAR" id="r{a-W,JywAPfJ.q-)QKR">mRow1</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with" id="oE6_X-:=RG.yLjO)[B(B" inline="false"><mutation items="4" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number" id="K3GJuDi2.ktD0StGa{a="><field name="NUM">0</field></shadow></value><value name="ADD1"><shadow type="math_number" id="sH+.5Lvw}8^w-v0{5ed;"><field name="NUM">0</field></shadow></value><value name="ADD2"><shadow type="math_number" id="IL)JHO16X.sX11%9!em,"><field name="NUM">0</field></shadow></value><value name="ADD3"><shadow type="math_number" id="M!`Y,t]:?p:bf_!eC9cc"><field name="NUM">0</field></shadow></value></block></value><next><block type="variables_set" id="`%;7)x=G?%[y_YoeVD_L"><field name="VAR" id="sn?*-|+fd{m#%CQ.|AG=">mRow2</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with" id="qt?=R]^2Q:C@P#zxrg9^" inline="false"><mutation items="4" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number" id="OE3gM7L]*us~?Hcc:j]F"><field name="NUM">0</field></shadow></value><value name="ADD1"><shadow type="math_number" id="/yaw.dfB1bob7-m?oM/E"><field name="NUM">0</field></shadow></value><value name="ADD2"><shadow type="math_number" id="@6}rt_`W@{FX8o#7e]H8"><field name="NUM">0</field></shadow></value><value name="ADD3"><shadow type="math_number" id="rM/AamE%r4=k@3l1)1W_"><field name="NUM">0</field></shadow></value></block></value><next><block type="variables_set" id="|s4.SOG%,(1$Sp-{$}wY"><field name="VAR" id="U:0A,IQuP[twk0o=rWwO">mRow3</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with" id="ps(VnY0K3RrETbw-Kp0d" inline="false"><mutation items="4" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number" id="U.TJK8oX*B$gxCz~F2Mn"><field name="NUM">0</field></shadow></value><value name="ADD1"><shadow type="math_number" id="ayWoo1`rFGm*:5HEa?Db"><field name="NUM">0</field></shadow></value><value name="ADD2"><shadow type="math_number" id="8.VJDzpG5WOug(Qc2uhf"><field name="NUM">0</field></shadow></value><value name="ADD3"><shadow type="math_number" id="z^;PYzu~ZcrWQobgEtg;"><field name="NUM">0</field></shadow></value></block></value><next><block type="variables_set" id="`z;q8?x-^zy+gtjPmN`n"><field name="VAR" id="=pL4g`T3h*1QJx$27Rl[">mRow4</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with" id="c%oL,6dc2-3)v2|hWOlO" inline="false"><mutation items="4" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number" id="AgCul_9U3}J+GV;~X2^H"><field name="NUM">0</field></shadow></value><value name="ADD1"><shadow type="math_number" id="s9[-8@~#LIGfY4j%RmC*"><field name="NUM">0</field></shadow></value><value name="ADD2"><shadow type="math_number" id="m#jQsaM4L$NZkmQ*m8}p"><field name="NUM">0</field></shadow></value><value name="ADD3"><shadow type="math_number" id="XrHTI?8}DlD4S33me;u_"><field name="NUM">0</field></shadow></value></block></value><next><block type="typescript_statement" id="eK(X@|:5z[[j1GOUy!PL" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace matStuff {" line1="    //%block" line2="    export function matrixInverseFixed(in1: Array&lt;int32&gt;, in2: Array&lt;int32&gt;, in3: Array&lt;int32&gt;, in4: Array&lt;int32&gt;): Array&lt;Array&lt;int32&gt;&gt; {" line3="" line4="        mRow1 = in1;" line5="        mRow2 = in2;" line6="        mRow3 = in3;" line7="        mRow4 = in4;" line8="" line9="        " line10="        det = mRow1[0] * mRow2[1] * mRow3[2] * mRow4[3] + mRow1[0] * mRow2[2] * mRow3[3] * mRow4[1] + mRow1[0] * mRow2[3] * mRow3[1] * mRow4[2] - mRow1[0] * mRow2[3] * mRow3[2] * mRow4[1] - mRow1[0] * mRow2[2] * mRow3[1] * mRow4[3] - mRow1[0] * mRow2[1] * mRow3[3] * mRow4[2] - mRow1[1] * mRow2[0] * mRow3[2] * mRow4[3] - mRow1[2] * mRow2[0] * mRow3[3] * mRow4[1] - mRow1[3] * mRow2[0] * mRow3[1] * mRow4[2] + mRow1[3] * mRow2[0] * mRow3[2] * mRow4[1] + mRow1[2] * mRow2[0] * mRow3[1] * mRow4[3] + mRow1[1] * mRow2[0] * mRow3[3] * mRow4[2] + mRow1[1] * mRow2[2] * mRow3[0] * mRow4[3] + mRow1[2] * mRow2[3] * mRow3[0] * mRow4[1] + mRow1[3] * mRow2[1] * mRow3[0] * mRow4[2] - mRow1[3] * mRow2[2] * mRow3[0] * mRow4[1] - mRow1[2] * mRow2[1] * mRow3[0] * mRow4[3] - mRow1[1] * mRow2[3] * mRow3[0] * mRow4[2] - mRow1[1] * mRow2[2] * mRow3[3] * mRow4[0] - mRow1[2] * mRow2[3] * mRow3[1] * mRow4[0] - mRow1[3] * mRow2[1] * mRow3[2] * mRow4[0] + mRow1[3] * mRow2[2] * mRow3[1] * mRow4[0] + mRow1[2] * mRow2[1] * mRow3[3] * mRow4[0] + mRow1[1] * mRow2[3] * mRow3[2] * mRow4[0]" line11="        aRow1[0] = (mRow2[1] * mRow3[2] * mRow4[3] + mRow2[2] * mRow3[3] * mRow4[1] + mRow2[3] * mRow3[1] * mRow4[2] - mRow2[3] * mRow3[2] * mRow4[1] - mRow2[2] * mRow3[1] * mRow4[3] - mRow2[1] * mRow3[3] * mRow4[2]) / det" line12="        aRow1[1] = ((0 - mRow1[1]) * mRow3[2] * mRow4[3] - mRow1[2] * mRow3[3] * mRow4[1] - mRow1[3] * mRow3[1] * mRow4[2] + mRow1[3] * mRow3[2] * mRow4[1] + mRow1[2] * mRow3[1] * mRow4[3] + mRow1[1] * mRow3[3] * mRow4[2]) / det" line13="        aRow1[2] = (mRow1[1] * mRow2[2] * mRow4[3] + mRow1[2] * mRow2[3] * mRow4[1] + mRow1[3] * mRow2[1] * mRow4[2] - mRow1[3] * mRow2[2] * mRow4[1] - mRow1[2] * mRow2[1] * mRow4[3] - mRow1[1] * mRow2[3] * mRow4[2]) / det" line14="        aRow1[3] = ((0 - mRow1[1]) * mRow2[2] * mRow3[3] - mRow1[2] * mRow2[3] * mRow3[1] - mRow1[3] * mRow2[1] * mRow3[2] + mRow1[3] * mRow2[2] * mRow3[1] + mRow1[2] * mRow2[1] * mRow3[3] + mRow1[1] * mRow2[3] * mRow3[2]) / det" line15="        aRow2[0] = ((0 - mRow2[0]) * mRow3[2] * mRow4[3] - mRow2[2] * mRow3[3] * mRow4[0] - mRow2[3] * mRow3[0] * mRow4[2] + mRow2[3] * mRow3[2] * mRow4[0] + mRow2[2] * mRow3[0] * mRow4[3] + mRow2[0] * mRow3[3] * mRow4[2]) / det" line16="        aRow2[1] = (mRow1[0] * mRow3[2] * mRow4[3] + mRow1[2] * mRow3[3] * mRow4[0] + mRow1[3] * mRow3[0] * mRow4[2] - mRow1[3] * mRow3[2] * mRow4[0] - mRow1[2] * mRow3[0] * mRow4[3] - mRow1[0] * mRow3[3] * mRow4[2]) / det" line17="        aRow2[2] = ((0 - mRow1[0]) * mRow2[2] * mRow4[3] - mRow1[2] * mRow2[3] * mRow4[0] - mRow1[3] * mRow2[0] * mRow4[2] + mRow1[3] * mRow2[2] * mRow4[0] + mRow1[2] * mRow2[0] * mRow4[3] + mRow1[0] * mRow2[3] * mRow4[2]) / det" line18="        aRow2[3] = (mRow1[0] * mRow2[2] * mRow3[3] + mRow1[2] * mRow2[3] * mRow3[0] + mRow1[3] * mRow2[0] * mRow3[2] - mRow1[3] * mRow2[2] * mRow3[0] - mRow1[2] * mRow2[0] * mRow3[3] - mRow1[0] * mRow2[3] * mRow3[2]) / det" line19="        aRow3[0] = (mRow2[0] * mRow3[1] * mRow4[3] + mRow2[1] * mRow3[3] * mRow4[0] + mRow2[3] * mRow3[0] * mRow4[1] - mRow2[3] * mRow3[1] * mRow4[0] - mRow2[1] * mRow3[0] * mRow4[3] - mRow2[0] * mRow3[3] * mRow4[1]) / det" line20="        aRow3[1] = ((0 - mRow1[0]) * mRow3[1] * mRow4[3] - mRow1[1] * mRow3[3] * mRow4[0] - mRow1[3] * mRow3[0] * mRow4[1] + mRow1[3] * mRow3[1] * mRow4[0] + mRow1[1] * mRow3[0] * mRow4[3] + mRow1[0] * mRow3[3] * mRow4[1]) / det" line21="        aRow3[2] = (mRow1[0] * mRow2[1] * mRow4[3] + mRow1[1] * mRow2[3] * mRow4[0] + mRow1[3] * mRow2[0] * mRow4[1] - mRow1[3] * mRow2[1] * mRow4[0] - mRow1[1] * mRow2[0] * mRow4[3] - mRow1[0] * mRow2[3] * mRow4[1]) / det" line22="        aRow3[3] = ((0 - mRow1[0]) * mRow2[1] * mRow3[3] - mRow1[1] * mRow2[3] * mRow3[0] - mRow1[3] * mRow2[0] * mRow3[1] + mRow1[3] * mRow2[1] * mRow3[0] + mRow1[1] * mRow2[0] * mRow3[3] + mRow1[0] * mRow2[3] * mRow3[1]) / det" line23="        aRow4[0] = ((0 - mRow2[0]) * mRow3[1] * mRow4[2] - mRow2[1] * mRow3[2] * mRow4[0] - mRow2[2] * mRow3[0] * mRow4[1] + mRow2[2] * mRow3[1] * mRow4[0] + mRow2[1] * mRow3[0] * mRow4[2] + mRow2[0] * mRow3[2] * mRow4[1]) / det" line24="        aRow4[1] = (mRow1[0] * mRow3[1] * mRow4[2] + mRow1[1] * mRow3[2] * mRow4[0] + mRow1[2] * mRow3[0] * mRow4[1] - mRow1[2] * mRow3[1] * mRow4[0] - mRow1[1] * mRow3[0] * mRow4[2] - mRow1[0] * mRow3[2] * mRow4[1]) / det" line25="        aRow4[2] = ((0 - mRow1[0]) * mRow2[1] * mRow4[2] - mRow1[1] * mRow2[2] * mRow4[0] - mRow1[2] * mRow2[0] * mRow4[1] + mRow1[2] * mRow2[1] * mRow4[0] + mRow1[1] * mRow2[0] * mRow4[2] + mRow1[0] * mRow2[2] * mRow4[1]) / det" line26="        aRow4[3] = (mRow1[0] * mRow2[1] * mRow3[2] + mRow1[1] * mRow2[2] * mRow3[0] + mRow1[2] * mRow2[0] * mRow3[1] - mRow1[2] * mRow2[1] * mRow3[0] - mRow1[1] * mRow2[0] * mRow3[2] - mRow1[0] * mRow2[2] * mRow3[1]) / det" line27="        return [" line28="            aRow1," line29="            aRow2," line30="            aRow3," line31="            aRow4" line32="        ];" line33="" line34="    }" line35="" line36="    //%block" line37="    export function multMat(inA1: Array&lt;int32&gt;, inA2: Array&lt;int32&gt;, inA3: Array&lt;int32&gt;, inB1: Array&lt;int32&gt;, inB2: Array&lt;int32&gt;, inB3: Array&lt;int32&gt;): Array&lt;Array&lt;int32&gt;&gt; {" line38="        /*" line39="        let inA3: number[] = []" line40="        let inA2: number[] = []" line41="        let inB3: number[] = []" line42="        let inB2: number[] = []" line43="        let inB1: number[] = []" line44="        let inA1: number[] = []" line45="        */" line46="        out1 = [0, 0, 0]" line47="        out2 = [0, 0, 0]" line48="        out3 = [0, 0, 0]" line49="        out1[0] = inA1[0] * inB1[0] + inA1[1] * inB2[0] + inA1[2] * inB3[0]" line50="        out1[1] = inA1[0] * inB1[1] + inA1[1] * inB2[1] + inA1[2] * inB3[1]" line51="        out1[2] = inA1[0] * inB1[2] + inA1[1] * inB2[2] + inA1[2] * inB3[2]" line52="        out2[0] = inA2[0] * inB1[0] + inA2[1] * inB2[0] + inA2[2] * inB3[0]" line53="        out2[1] = inA2[0] * inB1[1] + inA2[1] * inB2[1] + inA2[2] * inB3[1]" line54="        out2[2] = inA2[0] * inB1[2] + inA2[1] * inB2[2] + inA2[2] * inB3[2]" line55="        out3[0] = inA3[0] * inB1[0] + inA3[1] * inB2[0] + inA3[2] * inB3[0]" line56="        out3[1] = inA3[0] * inB1[1] + inA3[1] * inB2[1] + inA3[2] * inB3[1]" line57="        out3[2] = inA3[0] * inB1[2] + inA3[1] * inB2[2] + inA3[2] * inB3[2]" line58="        return [" line59="            out1," line60="            out2," line61="            out3," line62="        ];" line63="    }" line64="" line65="}" numlines="66"></mutation></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="game_show_long_text" id="tP3ge#^(u1F;dscw%!h8" disabled="true" x="240" y="2740"><field name="layout">DialogLayout.Bottom</field><value name="str"><shadow type="text" id="6I*kj1o}f#ue1Zqp}(==" disabled="true"><field name="TEXT"></field></shadow></value></block></xml>