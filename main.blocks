<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="s(g8c)(Pek)RsHdKs|h}">mRow1</variable><variable id="+n5#$nP/zk0W8e%MY*@L">mRow2</variable><variable id="A/vI4nMn[j^OicQ5BOiF">mRow3</variable><variable id="u;IdmVGuCz41ydHPplgB">mRow4</variable></variables><block type="pxt-on-start" id="|hm?BUV-z2u{=,3myEaD" x="0" y="0"><statement name="HANDLER"><block type="variables_set" id="NXkb-);idFx#XdKkGT;3"><field name="VAR" id="s(g8c)(Pek)RsHdKs|h}">mRow1</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with" id="*:28!G3eIGoIf*H7cn:K" inline="false"><mutation items="4" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number" id="@w8VH|Wg64#C))_(tx{B"><field name="NUM">1</field></shadow></value><value name="ADD1"><shadow type="math_number" id="FbshUicCndv2QGqpXd`R"><field name="NUM">5</field></shadow></value><value name="ADD2"><shadow type="math_number" id="GeHk5qxtI+rUm}wiVlwf"><field name="NUM">5</field></shadow></value><value name="ADD3"><shadow type="math_number" id=")0wfse3|!T8;GUy(;A9|"><field name="NUM">2</field></shadow></value></block></value><next><block type="variables_set" id="oD:B~a4v%7u+%bgepP@2"><field name="VAR" id="+n5#$nP/zk0W8e%MY*@L">mRow2</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with" id="p|tlh40S`7TR$2Aft]ID" inline="false"><mutation items="4" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number" id="azU@]$g=z{vlP{O^i{h+"><field name="NUM">5</field></shadow></value><value name="ADD1"><shadow type="math_number" id="Z*5eTY[K%y934.EH_|)X"><field name="NUM">6</field></shadow></value><value name="ADD2"><shadow type="math_number" id="=YJ^b|zUh5i$9-JX#ofI"><field name="NUM">2</field></shadow></value><value name="ADD3"><shadow type="math_number" id="~.Xd]qvwmQga$]=zVH.t"><field name="NUM">8</field></shadow></value></block></value><next><block type="variables_set" id="jT^smnyXKX3w:OPwp%Cr"><field name="VAR" id="A/vI4nMn[j^OicQ5BOiF">mRow3</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with" id="oB5KF0+j[[0b~B@V@S^w" inline="false"><mutation items="4" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number" id="$@FF$yknjO(1tiWMNsxn"><field name="NUM">2</field></shadow></value><value name="ADD1"><shadow type="math_number" id="6A~%CXRV`Wc[R{nT!?O("><field name="NUM">6</field></shadow></value><value name="ADD2"><shadow type="math_number" id="[6xm3{7n5QkEVIUw_^j9"><field name="NUM">9</field></shadow></value><value name="ADD3"><shadow type="math_number" id="gK;u_I`%31xEPT;YZ4rm"><field name="NUM">5</field></shadow></value></block></value><next><block type="variables_set" id="_Iv`|g!vZ_5FHyrE`r`P"><field name="VAR" id="u;IdmVGuCz41ydHPplgB">mRow4</field><value name="VALUE"><shadow type="math_number"><field name="NUM">0</field></shadow><block type="lists_create_with" id="6xtp.?TrOg{6!daE5=K=" inline="false"><mutation items="4" horizontalafter="3"></mutation><value name="ADD0"><shadow type="math_number" id="6h#=`.=%NCX@%B8c}D%I"><field name="NUM">4</field></shadow></value><value name="ADD1"><shadow type="math_number" id="];K5v0]rWA/iUJm/YmLy"><field name="NUM">5</field></shadow></value><value name="ADD2"><shadow type="math_number" id="=3~1zB:EANiy~=/d~G|w"><field name="NUM">1</field></shadow></value><value name="ADD3"><shadow type="math_number" id="=?)Ja6He9J$MYp)jyZq:"><field name="NUM">2</field></shadow></value></block></value><next><block type="typescript_statement" id="7F#rHI=om@aN6MTrreYq" editable="false"><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace matStuff {" line1="    //%block" line2="    export function matrixInverseFixed(in1: Array&lt;int32&gt;, in2: Array&lt;int32&gt;, in3: Array&lt;int32&gt;, in4: Array&lt;int32&gt;): Array&lt;Array&lt;int32&gt;&gt; {" line3="        let aRow1: number[] = []" line4="        let aRow2: number[] = []" line5="        let aRow3: number[] = []" line6="        let aRow4: number[] = []" line7="" line8="        let det = 0" line9="       " line10="        " line11="        det = mRow1[0] * mRow2[1] * mRow3[2] * mRow4[3] + mRow1[0] * mRow2[2] * mRow3[3] * mRow4[1] + mRow1[0] * mRow2[3] * mRow3[1] * mRow4[2] - mRow1[0] * mRow2[3] * mRow3[2] * mRow4[1] - mRow1[0] * mRow2[2] * mRow3[1] * mRow4[3] - mRow1[0] * mRow2[1] * mRow3[3] * mRow4[2] - mRow1[1] * mRow2[0] * mRow3[2] * mRow4[3] - mRow1[2] * mRow2[0] * mRow3[3] * mRow4[1] - mRow1[3] * mRow2[0] * mRow3[1] * mRow4[2] + mRow1[3] * mRow2[0] * mRow3[2] * mRow4[1] + mRow1[2] * mRow2[0] * mRow3[1] * mRow4[3] + mRow1[1] * mRow2[0] * mRow3[3] * mRow4[2] + mRow1[1] * mRow2[2] * mRow3[0] * mRow4[3] + mRow1[2] * mRow2[3] * mRow3[0] * mRow4[1] + mRow1[3] * mRow2[1] * mRow3[0] * mRow4[2] - mRow1[3] * mRow2[2] * mRow3[0] * mRow4[1] - mRow1[2] * mRow2[1] * mRow3[0] * mRow4[3] - mRow1[1] * mRow2[3] * mRow3[0] * mRow4[2] - mRow1[1] * mRow2[2] * mRow3[3] * mRow4[0] - mRow1[2] * mRow2[3] * mRow3[1] * mRow4[0] - mRow1[3] * mRow2[1] * mRow3[2] * mRow4[0] + mRow1[3] * mRow2[2] * mRow3[1] * mRow4[0] + mRow1[2] * mRow2[1] * mRow3[3] * mRow4[0] + mRow1[1] * mRow2[3] * mRow3[2] * mRow4[0]" line12="        aRow1[0] = (mRow2[1] * mRow3[2] * mRow4[3] + mRow2[2] * mRow3[3] * mRow4[1] + mRow2[3] * mRow3[1] * mRow4[2] - mRow2[3] * mRow3[2] * mRow4[1] - mRow2[2] * mRow3[1] * mRow4[3] - mRow2[1] * mRow3[3] * mRow4[2]) / det" line13="        aRow1[1] = ((0 - mRow1[1]) * mRow3[2] * mRow4[3] - mRow1[2] * mRow3[3] * mRow4[1] - mRow1[3] * mRow3[1] * mRow4[2] + mRow1[3] * mRow3[2] * mRow4[1] + mRow1[2] * mRow3[1] * mRow4[3] + mRow1[1] * mRow3[3] * mRow4[2]) / det" line14="        aRow1[2] = (mRow1[1] * mRow2[2] * mRow4[3] + mRow1[2] * mRow2[3] * mRow4[1] + mRow1[3] * mRow2[1] * mRow4[2] - mRow1[3] * mRow2[2] * mRow4[1] - mRow1[2] * mRow2[1] * mRow4[3] - mRow1[1] * mRow2[3] * mRow4[2]) / det" line15="        aRow1[3] = ((0 - mRow1[1]) * mRow2[2] * mRow3[3] - mRow1[2] * mRow2[3] * mRow3[1] - mRow1[3] * mRow2[1] * mRow3[2] + mRow1[3] * mRow2[2] * mRow3[1] + mRow1[2] * mRow2[1] * mRow3[3] + mRow1[1] * mRow2[3] * mRow3[2]) / det" line16="        aRow2[0] = ((0 - mRow2[0]) * mRow3[2] * mRow4[3] - mRow2[2] * mRow3[3] * mRow4[0] - mRow2[3] * mRow3[0] * mRow4[2] + mRow2[3] * mRow3[2] * mRow4[0] + mRow2[2] * mRow3[0] * mRow4[3] + mRow2[0] * mRow3[3] * mRow4[2]) / det" line17="        aRow2[1] = (mRow1[0] * mRow3[2] * mRow4[3] + mRow1[2] * mRow3[3] * mRow4[0] + mRow1[3] * mRow3[0] * mRow4[2] - mRow1[3] * mRow3[2] * mRow4[0] - mRow1[2] * mRow3[0] * mRow4[3] - mRow1[0] * mRow3[3] * mRow4[2]) / det" line18="        aRow2[2] = ((0 - mRow1[0]) * mRow2[2] * mRow4[3] - mRow1[2] * mRow2[3] * mRow4[0] - mRow1[3] * mRow2[0] * mRow4[2] + mRow1[3] * mRow2[2] * mRow4[0] + mRow1[2] * mRow2[0] * mRow4[3] + mRow1[0] * mRow2[3] * mRow4[2]) / det" line19="        aRow2[3] = (mRow1[0] * mRow2[2] * mRow3[3] + mRow1[2] * mRow2[3] * mRow3[0] + mRow1[3] * mRow2[0] * mRow3[2] - mRow1[3] * mRow2[2] * mRow3[0] - mRow1[2] * mRow2[0] * mRow3[3] - mRow1[0] * mRow2[3] * mRow3[2]) / det" line20="        aRow3[0] = (mRow2[0] * mRow3[1] * mRow4[3] + mRow2[1] * mRow3[3] * mRow4[0] + mRow2[3] * mRow3[0] * mRow4[1] - mRow2[3] * mRow3[1] * mRow4[0] - mRow2[1] * mRow3[0] * mRow4[3] - mRow2[0] * mRow3[3] * mRow4[1]) / det" line21="        aRow3[1] = ((0 - mRow1[0]) * mRow3[1] * mRow4[3] - mRow1[1] * mRow3[3] * mRow4[0] - mRow1[3] * mRow3[0] * mRow4[1] + mRow1[3] * mRow3[1] * mRow4[0] + mRow1[1] * mRow3[0] * mRow4[3] + mRow1[0] * mRow3[3] * mRow4[1]) / det" line22="        aRow3[2] = (mRow1[0] * mRow2[1] * mRow4[3] + mRow1[1] * mRow2[3] * mRow4[0] + mRow1[3] * mRow2[0] * mRow4[1] - mRow1[3] * mRow2[1] * mRow4[0] - mRow1[1] * mRow2[0] * mRow4[3] - mRow1[0] * mRow2[3] * mRow4[1]) / det" line23="        aRow3[3] = ((0 - mRow1[0]) * mRow2[1] * mRow3[3] - mRow1[1] * mRow2[3] * mRow3[0] - mRow1[3] * mRow2[0] * mRow3[1] + mRow1[3] * mRow2[1] * mRow3[0] + mRow1[1] * mRow2[0] * mRow3[3] + mRow1[0] * mRow2[3] * mRow3[1]) / det" line24="        aRow4[0] = ((0 - mRow2[0]) * mRow3[1] * mRow4[2] - mRow2[1] * mRow3[2] * mRow4[0] - mRow2[2] * mRow3[0] * mRow4[1] + mRow2[2] * mRow3[1] * mRow4[0] + mRow2[1] * mRow3[0] * mRow4[2] + mRow2[0] * mRow3[2] * mRow4[1]) / det" line25="        aRow4[1] = (mRow1[0] * mRow3[1] * mRow4[2] + mRow1[1] * mRow3[2] * mRow4[0] + mRow1[2] * mRow3[0] * mRow4[1] - mRow1[2] * mRow3[1] * mRow4[0] - mRow1[1] * mRow3[0] * mRow4[2] - mRow1[0] * mRow3[2] * mRow4[1]) / det" line26="        aRow4[2] = ((0 - mRow1[0]) * mRow2[1] * mRow4[2] - mRow1[1] * mRow2[2] * mRow4[0] - mRow1[2] * mRow2[0] * mRow4[1] + mRow1[2] * mRow2[1] * mRow4[0] + mRow1[1] * mRow2[0] * mRow4[2] + mRow1[0] * mRow2[2] * mRow4[1]) / det" line27="        aRow4[3] = (mRow1[0] * mRow2[1] * mRow3[2] + mRow1[1] * mRow2[2] * mRow3[0] + mRow1[2] * mRow2[0] * mRow3[1] - mRow1[2] * mRow2[1] * mRow3[0] - mRow1[1] * mRow2[0] * mRow3[2] - mRow1[0] * mRow2[2] * mRow3[1]) / det" line28="        return [" line29="            aRow1," line30="            aRow2," line31="            aRow3," line32="            aRow4" line33="        ];" line34="" line35="    }" line36="}" numlines="37"></mutation></block></next></block></next></block></next></block></next></block></statement></block><block type="game_show_long_text" id="=o?_?nu/jqh5U~/VJqtY" disabled="true" x="250" y="2750"><field name="layout">DialogLayout.Bottom</field><value name="str"><shadow type="text" id="380v8DJ1f^TnlE|MDWb#" disabled="true"><field name="TEXT"></field></shadow></value></block></xml>